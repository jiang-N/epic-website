{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Dragger","Upload","Result","styled","div","StyledInput","input","Component","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalObservable","width","setWidth","height","setHeight","serverFile","attributes","url","widthStr","heightStr","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","test","type","size","error","upload","then","console","log","catch","tip","spinning","isUploading","className","InboxOutlined","href","target","rel","filename","src","alt","placeholder","onChange","current","value","ref","fullStr","Tips","children","Home","Uploader"],"mappings":"iNAOOA,EAAWC,IAAXD,QAEDE,EAASC,IAAOC,IAAV,0PAmBNC,EAAcF,IAAOG,MAAV,uDA2GFC,EAvGGC,aAAS,WAAO,IAAD,EACGC,cAAzBC,EADsB,EACtBA,WAAYC,EADU,EACVA,UACbC,EAAOC,mBACPC,EAAOD,mBAEPE,EAAQC,aAAmB,iBAAO,CACtCC,MAAO,KACPC,SAFsC,SAE7BD,GACPF,EAAME,MAAQA,GAEhB,eACE,OAAOF,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE7CE,OAAQ,KACRC,UATsC,SAS5BD,GACRJ,EAAMI,OAASA,GAEjB,gBACE,OAAOJ,EAAMI,OAAN,aAAqBJ,EAAMI,QAAW,IAE/C,cACE,OAAOT,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBR,EAAMS,SAAWT,EAAMU,eAYpGC,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAAAC,GAGZ,OAFAnB,EAAWoB,QAAQD,GACnBnB,EAAWqB,YAAYF,EAAKG,MACE,OAA1BrB,EAAUsB,aACZC,IAAQC,QAAQ,+CACT,GAEJ,sCAAsCC,KAAKP,EAAKQ,MAIjDR,EAAKS,KAAO,SACdJ,IAAQK,MAAM,+BACP,IAET7B,EAAW8B,SAASC,MAAK,WACvBC,QAAQC,IAAI,+BACXC,OAAM,WACPF,QAAQC,IAAI,gCAEP,IAZLT,IAAQK,MAAM,0EACP,KAeb,OACE,gCACE,cAAC,IAAD,CAAMM,IAAI,qBAAMC,SAAUpC,EAAWqC,YAArC,SACE,eAAC/C,EAAD,2BAAa0B,GAAb,cACE,mBAAGsB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,0EACA,mBAAGA,UAAU,kBAAb,uHAMFtC,EAAWW,WAAa,eAACnB,EAAD,WACtB,0DACA,+BACE,0DACA,6BACE,mBAAGgD,KAAMxC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IACtD4B,OAAO,SAASC,IAAI,aADvB,SACqC1C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,QAEvF,oDACA,6BAAKb,EAAW2C,WAChB,0DACA,6BACE,qBAAKC,IAAK5C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAKgC,IAAI,yBAErE,gEACA,+BACE,cAAClD,EAAD,CAAagC,KAAK,OAAOmB,YAAY,eAAKC,SAhE9B,WACtB1C,EAAMG,SAASN,EAAK8C,QAAQC,QA+DmDC,IAAKhD,IAC1E,cAACP,EAAD,CAAagC,KAAK,OAAOmB,YAAY,eAAKC,SA7D7B,WACvB1C,EAAMK,UAAUN,EAAK4C,QAAQC,QA4DmDC,IAAK9C,OAE7E,6BACE,mBAAGoC,KAAMnC,EAAM8C,QAASV,OAAO,SAASC,IAAI,aAA5C,SAA0DrC,EAAM8C,kBAG1D,WC3HhBC,EAAO3D,IAAOC,IAAV,+HAmBKG,EAXGC,aAAS,YAAiB,IAAfuD,EAAc,EAAdA,SACpBpD,EAAaF,cAAbE,UACP,OACE,mCAEIA,EAAUsB,YAAc,KAAO,cAAC6B,EAAD,UAAOC,SCbxCC,EAAOxD,aAAS,WACpB,OACE,qCACE,cAAC,EAAD,yDACA,cAACyD,EAAD,UAKSD","file":"static/js/9.5f7e8b1d.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\nimport {useStores} from '../stores'\r\nimport {observer, useLocalObservable} from 'mobx-react'\r\nimport {Upload, message, Spin} from 'antd'\r\nimport {InboxOutlined} from '@ant-design/icons'\r\nimport styled from 'styled-components'\r\n\r\nconst {Dragger} = Upload\r\n\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px dashed #ccc;\r\n  padding: 20px;\r\n\r\n  & > h1 {\r\n    margin: 20px 0;\r\n    text-align: center;\r\n  }\r\n\r\n  & > img {\r\n    max-width: 300px;\r\n  }\r\n\r\n  & > dl > dt {\r\n    margin-top: 15px;\r\n  }\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  border: 1px solid #ccc;\r\n`\r\n\r\nconst Component = observer(() => {\r\n    const {ImageStore, UserStore} = useStores()\r\n    const ref1 = useRef()\r\n    const ref2 = useRef()\r\n\r\n    const store = useLocalObservable(() => ({\r\n      width: null,\r\n      setWidth(width) {\r\n        store.width = width\r\n      },\r\n      get widthStr() {\r\n        return store.width ? `/w/${store.width}` : ''\r\n      },\r\n      height: null,\r\n      setHeight(height) {\r\n        store.height = height\r\n      },\r\n      get heightStr() {\r\n        return store.height ? `/h/${store.height}` : ''\r\n      },\r\n      get fullStr() {\r\n        return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\r\n      }\r\n    }))\r\n\r\n    const bindWidthChange = () => {\r\n      store.setWidth(ref1.current.value)\r\n    }\r\n\r\n    const bindHeightChange = () => {\r\n      store.setHeight(ref2.current.value)\r\n    }\r\n\r\n    const props = {\r\n      showUploadList: false,\r\n      beforeUpload: file => {\r\n        ImageStore.setFile(file)\r\n        ImageStore.setFilename(file.name)\r\n        if (UserStore.currentUser === null) {\r\n          message.warning('请先登录再上传')\r\n          return false\r\n        }\r\n        if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/.test(file.type)) {\r\n          message.error('只能上传svg/png/jpg/gif格式的图片')\r\n          return false\r\n        }\r\n        if (file.size > 1024 * 1024) {\r\n          message.error('图片大于1M')\r\n          return false\r\n        }\r\n        ImageStore.upload().then(() => {\r\n          console.log('上传成功')\r\n        }).catch(() => {\r\n          console.log('上传失败')\r\n        })\r\n        return false\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Spin tip='上传中' spinning={ImageStore.isUploading}>\r\n          <Dragger {...props}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined/>\r\n            </p>\r\n            <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n            <p className=\"ant-upload-hint\">\r\n              仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M\r\n            </p>\r\n          </Dragger>\r\n        </Spin>\r\n        {\r\n          ImageStore.serverFile ? <Result>\r\n            <h1>上传结果</h1>\r\n            <dl>\r\n              <dt>图片地址</dt>\r\n              <dd>\r\n                <a href={ImageStore.serverFile.attributes.url.attributes.url}\r\n                   target='_blank' rel='noreferrer'>{ImageStore.serverFile.attributes.url.attributes.url}</a>\r\n              </dd>\r\n              <dt>文件名</dt>\r\n              <dd>{ImageStore.filename}</dd>\r\n              <dt>图片预览</dt>\r\n              <dd>\r\n                <img src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"预览图\"/>\r\n              </dd>\r\n              <dt>自定义尺寸</dt>\r\n              <dd>\r\n                <StyledInput type=\"text\" placeholder='宽度' onChange={bindWidthChange} ref={ref1}/>\r\n                <StyledInput type=\"text\" placeholder='高度' onChange={bindHeightChange} ref={ref2}/>\r\n              </dd>\r\n              <dd>\r\n                <a href={store.fullStr} target='_blank' rel='noreferrer'>{store.fullStr}</a>\r\n              </dd>\r\n            </dl>\r\n          </Result> : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nexport default Component","import React from 'react'\r\nimport {useStores} from '../stores'\r\nimport {observer} from 'mobx-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Tips = styled.div`\r\n  background: orange;\r\n  padding: 10px;\r\n  margin: 30px 0;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Component = observer(({children}) => {\r\n  const {UserStore} = useStores()\r\n  return (\r\n    <>\r\n      {\r\n        UserStore.currentUser ? null : <Tips>{children}</Tips>\r\n      }\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Component","import React from 'react'\r\nimport {observer} from 'mobx-react'\r\nimport Uploader from '../components/Uploader'\r\nimport Tips from '../components/Tips'\r\n\r\nconst Home = observer(() => {\r\n  return (\r\n    <>\r\n      <Tips>请先登录在上传</Tips>\r\n      <Uploader/>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default Home"],"sourceRoot":""}